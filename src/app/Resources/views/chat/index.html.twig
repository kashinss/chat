{% extends 'base.html.twig' %}

{% block body %}
    <div class="container mt-4">
        <!-- Окно выбора операторов -->
        <div id="operator-selection" class="mb-4">
            <h3>Выберите оператора</h3>
            <div class="list-group">
                {% for operator in operators %}
                    <button class="list-group-item list-group-item-action operator-button" data-operator="{{ operator.id }}">
                        {{ operator.name }}
                    </button>
                {% endfor %}
            </div>
        </div>

        <!-- Окно чата -->
        <div id="chat-window" class="d-none">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 id="operator-name" class="mb-0"></h4>
                    <button class="btn btn-sm btn-danger" id="close-chat">Закрыть</button>
                </div>
                <div class="card-body chat-messages" id="chat-messages" style="height: 300px; overflow-y: auto;">
                    <!-- Сообщения будут добавляться здесь -->
                </div>
                <div class="card-footer">
                    <div class="input-group">
                        <input type="text" class="form-control" id="message-input" placeholder="Введите сообщение...">
                        <button class="btn btn-primary" id="send-message">Отправить</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const operatorButtons = document.querySelectorAll('.operator-button');
            const chatWindow = document.getElementById('chat-window');
            const operatorSelection = document.getElementById('operator-selection');
            const operatorName = document.getElementById('operator-name');
            const closeChatButton = document.getElementById('close-chat');
            const messageInput = document.getElementById('message-input');
            const sendMessageButton = document.getElementById('send-message');
            const chatMessages = document.getElementById('chat-messages');

            let currentOperatorId = null;

            operatorButtons.forEach(button => {
                button.addEventListener('click', () => {
                    currentOperatorId = button.getAttribute('data-operator');
                    operatorName.textContent = button.textContent;
                    operatorSelection.classList.add('d-none');
                    chatWindow.classList.remove('d-none');
                });
            });

            closeChatButton.addEventListener('click', () => {
                currentOperatorId = null;
                operatorName.textContent = '';
                chatWindow.classList.add('d-none');
                operatorSelection.classList.remove('d-none');
            });

            sendMessageButton.addEventListener('click', sendMessage);
            messageInput.addEventListener('keypress', (event) => {
                if (event.key === 'Enter') {
                    sendMessage();
                }
            });

            function sendMessage() {
                const message = messageInput.value.trim();
                if (!message) return;

                const messageElement = document.createElement('div');
                messageElement.className = 'text-end mb-2';
                messageElement.innerHTML = `<span class="badge bg-primary">${message}</span>`;
                chatMessages.appendChild(messageElement);

                chatMessages.scrollTop = chatMessages.scrollHeight;

                if (currentOperatorId) {
                    console.log(`Отправлено сообщение оператору ${currentOperatorId}: ${message}`);
                }

                messageInput.value = '';
            }
        });
    </script>
{% endblock %}
